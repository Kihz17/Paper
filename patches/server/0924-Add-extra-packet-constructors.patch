From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kihz17 <mitchdawdy@gmail.com>
Date: Sat, 18 Jun 2022 15:05:00 -0400
Subject: [PATCH] Add extra packet constructors.


diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
index a7912b5097e43868de92f72ae5599f4549e4095b..edf04a65f51fc1d95fce28a58011b8be397899b0 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
@@ -64,6 +64,38 @@ public class ClientboundAddEntityPacket implements Packet<ClientGamePacketListen
         this.za = (int)(Mth.clamp(velocity.z, -3.9D, 3.9D) * 8000.0D);
     }
 
+    public ClientboundAddEntityPacket(int entityId, UUID entityUuid, EntityType<?> entityType, double x, double y, double z, int motX, int motY, int motZ, byte yaw, byte pitch, byte yHeadRot, int entityData) {
+        this.id = entityId;
+        this.uuid = entityUuid;
+        this.type = entityType;
+        this.x = x;
+        this.y = y;
+        this.z = z;
+        this.xa = motX;
+        this.ya = motY;
+        this.za = motZ;
+        this.yRot = yaw;
+        this.xRot = pitch;
+        this.yHeadRot = yHeadRot;
+        this.data = entityData;
+    }
+
+    public ClientboundAddEntityPacket(int entityId, UUID entityUuid, EntityType<?> entityType, double x, double y, double z, int motX, int motY, int motZ, float yaw, float pitch, byte yHeadRot, int entityData) {
+        this.id = entityId;
+        this.uuid = entityUuid;
+        this.type = entityType;
+        this.x = x;
+        this.y = y;
+        this.z = z;
+        this.xa = motX;
+        this.ya = motY;
+        this.za = motZ;
+        this.yRot = (byte) ((int) (yaw * 256.0F / 360.0F));
+        this.xRot = (byte) ((int) (pitch * 256.0F / 360.0F));
+        this.yHeadRot = yHeadRot;
+        this.data = entityData;
+    }
+
     public ClientboundAddEntityPacket(FriendlyByteBuf buf) {
         this.id = buf.readVarInt();
         this.uuid = buf.readUUID();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddPlayerPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddPlayerPacket.java
index ab823de3fe0eb4870cd7fec543730d6d17060940..03033030e9780ed6e283d4482393f13c2ca4ef0f 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddPlayerPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddPlayerPacket.java
@@ -24,6 +24,16 @@ public class ClientboundAddPlayerPacket implements Packet<ClientGamePacketListen
         this.xRot = (byte)((int)(player.getXRot() * 256.0F / 360.0F));
     }
 
+    public ClientboundAddPlayerPacket(int id, UUID uuid, double x, double y, double z, byte yRot, byte xRot) {
+        this.entityId = id;
+        this.playerId = uuid;
+        this.x = x;
+        this.y = y;
+        this.z = z;
+        this.yRot = yRot;
+        this.xRot = xRot;
+    }
+
     public ClientboundAddPlayerPacket(FriendlyByteBuf buf) {
         this.entityId = buf.readVarInt();
         this.playerId = buf.readUUID();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket.java
index 46ae5d40c26264e6b0ca253afa65b7846e6e5e6d..6cd095e9619fef8d5aa957f1c7ae045587b25d06 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket.java
@@ -3,6 +3,8 @@ package net.minecraft.network.protocol.game;
 import com.google.common.base.MoreObjects;
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
+
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.List;
 import javax.annotation.Nullable;
@@ -37,6 +39,12 @@ public class ClientboundPlayerInfoPacket implements Packet<ClientGamePacketListe
 
     }
 
+    public ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action action, PlayerUpdate... updates) {
+        this.action = action;
+        this.entries = Lists.newArrayListWithCapacity(updates.length);
+        this.entries.addAll(Arrays.asList(updates));
+    }
+
     public ClientboundPlayerInfoPacket(FriendlyByteBuf buf) {
         this.action = buf.readEnum(ClientboundPlayerInfoPacket.Action.class);
         this.entries = buf.readList(this.action::read);
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java
index 15ebf22e9ca11870e5f24ff5ab8bcbee8c571ee3..15a9f2b69fd647cd0ec683652344bed418c839d2 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java
@@ -14,6 +14,11 @@ public class ClientboundRotateHeadPacket implements Packet<ClientGamePacketListe
         this.yHeadRot = headYaw;
     }
 
+    public ClientboundRotateHeadPacket(int id, byte headYaw) {
+        this.entityId = id;
+        this.yHeadRot = headYaw;
+    }
+
     public ClientboundRotateHeadPacket(FriendlyByteBuf buf) {
         this.entityId = buf.readVarInt();
         this.yHeadRot = buf.readByte();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket.java
index 3e17f6131bf590d7c4a16b79c1c145cb4f565bc9..d379ba7cab6e7e4f45f6866a8513432d34e7751b 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket.java
@@ -22,6 +22,11 @@ public class ClientboundSetEntityDataPacket implements Packet<ClientGamePacketLi
 
     }
 
+    public ClientboundSetEntityDataPacket(int id, List<SynchedEntityData.DataItem<?>> packedItems) {
+        this.id = id;
+        this.packedItems = packedItems;
+    }
+
     public ClientboundSetEntityDataPacket(FriendlyByteBuf buf) {
         this.id = buf.readVarInt();
         this.packedItems = SynchedEntityData.unpack(buf);
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java
index fc544e8187d5a2fa407e2c0d25d2d1862a17b4d0..99698b2ade01a48b2450f9b66dc9b112cb70ed95 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java
@@ -4,20 +4,23 @@ import com.google.common.collect.ImmutableList;
 import java.util.Collection;
 import java.util.Optional;
 import javax.annotation.Nullable;
+
+import com.google.common.collect.Lists;
 import net.minecraft.ChatFormatting;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.world.scores.PlayerTeam;
+import net.minecraft.world.scores.Team;
 
 public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketListener> {
-    private static final int METHOD_ADD = 0;
-    private static final int METHOD_REMOVE = 1;
-    private static final int METHOD_CHANGE = 2;
-    private static final int METHOD_JOIN = 3;
-    private static final int METHOD_LEAVE = 4;
-    private static final int MAX_VISIBILITY_LENGTH = 40;
-    private static final int MAX_COLLISION_LENGTH = 40;
+    public static final int METHOD_ADD = 0;
+    public static final int METHOD_REMOVE = 1;
+    public static final int METHOD_CHANGE = 2;
+    public static final int METHOD_JOIN = 3;
+    public static final int METHOD_LEAVE = 4;
+    public static final int MAX_VISIBILITY_LENGTH = 40;
+    public static final int MAX_COLLISION_LENGTH = 40;
     private final int method;
     private final String name;
     private final Collection<String> players;
@@ -30,6 +33,20 @@ public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketLi
         this.players = ImmutableList.copyOf(playerNames);
     }
 
+    public ClientboundSetPlayerTeamPacket(PlayerTeam scoreboardteam, int i) {
+        this.method = i;
+        this.name = scoreboardteam.getName();
+        this.players = Lists.newArrayList();
+        if (i == 0 || i == 2) {
+            this.parameters = Optional.of(new Parameters(scoreboardteam));
+        } else {
+            this.parameters = Optional.of(new Parameters());
+        }
+
+        if (i == 0)
+            this.players.addAll(scoreboardteam.getPlayers());
+    }
+
     public static ClientboundSetPlayerTeamPacket createAddOrModifyPacket(PlayerTeam team, boolean updatePlayers) {
         return new ClientboundSetPlayerTeamPacket(team.getName(), updatePlayers ? 0 : 2, Optional.of(new ClientboundSetPlayerTeamPacket.Parameters(team)), (Collection<String>)(updatePlayers ? team.getPlayers() : ImmutableList.of()));
     }
@@ -133,6 +150,10 @@ public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketLi
         return this.parameters;
     }
 
+    public int getMethod() {
+        return this.method;
+    }
+
     public static enum Action {
         ADD,
         REMOVE;
@@ -157,6 +178,26 @@ public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketLi
             this.playerSuffix = team.getPlayerSuffix();
         }
 
+        public Parameters(Component name, Component prefix, Component suffix, String nametagVisibility, String collisionRule, ChatFormatting color, int options) {
+            this.displayName = name;
+            this.options = options;
+            this.nametagVisibility = nametagVisibility;
+            this.collisionRule = collisionRule;
+            this.color = color;
+            this.playerPrefix = prefix;
+            this.playerSuffix = suffix;
+        }
+
+        public Parameters() {
+            this.displayName = Component.nullToEmpty("");
+            this.playerPrefix = Component.nullToEmpty("");
+            this.playerSuffix = Component.nullToEmpty("");
+            this.nametagVisibility = Team.Visibility.ALWAYS.name;
+            this.collisionRule = Team.CollisionRule.ALWAYS.name;
+            this.color = ChatFormatting.RESET;
+            this.options = 0;
+        }
+
         public Parameters(FriendlyByteBuf buf) {
             this.displayName = buf.readComponent();
             this.options = buf.readByte();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java
index ee8f6838d774fd316178a10db5101102963c1847..73d8ba8fe2fcf6205465dcab9c00cb3ac78feadb 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java
@@ -25,6 +25,16 @@ public class ClientboundTeleportEntityPacket implements Packet<ClientGamePacketL
         this.onGround = entity.isOnGround();
     }
 
+    public ClientboundTeleportEntityPacket(int id, double x, double y, double z, byte yRot, byte xRot, boolean onGround) {
+        this.id = id;
+        this.x = x;
+        this.y = y;
+        this.z = z;
+        this.yRot = yRot;
+        this.xRot = xRot;
+        this.onGround = onGround;
+    }
+
     public ClientboundTeleportEntityPacket(FriendlyByteBuf buf) {
         this.id = buf.readVarInt();
         this.x = buf.readDouble();
