From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kihz17 <mitchdawdy@gmail.com>
Date: Tue, 28 Jun 2022 18:26:29 -0400
Subject: [PATCH] Expose private horse fields.


diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
index a8da601b8342aa6e4902b452eb588c76c98a7adf..badc718c5c616480fcd0f407a7c10325c12fc88d 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -81,29 +81,29 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
     private static final Predicate<LivingEntity> PARENT_HORSE_SELECTOR = (entityliving) -> {
         return entityliving instanceof AbstractHorse && ((AbstractHorse) entityliving).isBred();
     };
-    private static final TargetingConditions MOMMY_TARGETING = TargetingConditions.forNonCombat().range(16.0D).ignoreLineOfSight().selector(AbstractHorse.PARENT_HORSE_SELECTOR);
-    private static final Ingredient FOOD_ITEMS = Ingredient.of(Items.WHEAT, Items.SUGAR, Blocks.HAY_BLOCK.asItem(), Items.APPLE, Items.GOLDEN_CARROT, Items.GOLDEN_APPLE, Items.ENCHANTED_GOLDEN_APPLE);
-    private static final EntityDataAccessor<Byte> DATA_ID_FLAGS = SynchedEntityData.defineId(AbstractHorse.class, EntityDataSerializers.BYTE);
-    private static final EntityDataAccessor<Optional<UUID>> DATA_ID_OWNER_UUID = SynchedEntityData.defineId(AbstractHorse.class, EntityDataSerializers.OPTIONAL_UUID);
-    private static final int FLAG_TAME = 2;
-    private static final int FLAG_SADDLE = 4;
-    private static final int FLAG_BRED = 8;
-    private static final int FLAG_EATING = 16;
-    private static final int FLAG_STANDING = 32;
-    private static final int FLAG_OPEN_MOUTH = 64;
+    public static final TargetingConditions MOMMY_TARGETING = TargetingConditions.forNonCombat().range(16.0D).ignoreLineOfSight().selector(AbstractHorse.PARENT_HORSE_SELECTOR);
+    public static final Ingredient FOOD_ITEMS = Ingredient.of(Items.WHEAT, Items.SUGAR, Blocks.HAY_BLOCK.asItem(), Items.APPLE, Items.GOLDEN_CARROT, Items.GOLDEN_APPLE, Items.ENCHANTED_GOLDEN_APPLE);
+    public static final EntityDataAccessor<Byte> DATA_ID_FLAGS = SynchedEntityData.defineId(AbstractHorse.class, EntityDataSerializers.BYTE);
+    public static final EntityDataAccessor<Optional<UUID>> DATA_ID_OWNER_UUID = SynchedEntityData.defineId(AbstractHorse.class, EntityDataSerializers.OPTIONAL_UUID);
+    public static final int FLAG_TAME = 2;
+    public static final int FLAG_SADDLE = 4;
+    public static final int FLAG_BRED = 8;
+    public static final int FLAG_EATING = 16;
+    public static final int FLAG_STANDING = 32;
+    public static final int FLAG_OPEN_MOUTH = 64;
     public static final int INV_SLOT_SADDLE = 0;
     public static final int INV_SLOT_ARMOR = 1;
     public static final int INV_BASE_COUNT = 2;
-    private int eatingCounter;
-    private int mouthCounter;
-    private int standCounter;
+    public int eatingCounter;
+    public int mouthCounter;
+    public int standCounter;
     public int tailCounter;
     public int sprintCounter;
-    protected boolean isJumping;
+    public boolean isJumping;
     public SimpleContainer inventory;
-    protected int temper;
-    protected float playerJumpPendingScale;
-    private boolean allowStandSliding;
+    public int temper;
+    public float playerJumpPendingScale;
+    public boolean allowStandSliding;
     private float eatAnim;
     private float eatAnimO;
     private float standAnim;
@@ -696,7 +696,7 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
         this.setFlag(32, angry);
     }
 
-    private void stand() {
+    public void stand() {
         if (this.isControlledByLocalInstance() || this.isEffectiveAi()) {
             this.standCounter = 1;
             this.setStanding(true);
